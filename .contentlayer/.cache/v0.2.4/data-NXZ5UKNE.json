{
  "cacheItemsMap": {
    "pre-rendering.mdx": {
      "document": {
        "title": "Two Forms of Pre-rendering",
        "date": "2020-01-01",
        "body": {
          "raw": "\nNext.js has two forms of pre-rendering: **Static Generation** and **Server-side Rendering**. The difference is in **when** it generates the HTML for a page.\n\n- **Static Generation** is the pre-rendering method that generates the HTML at **build time**. The pre-rendered HTML is then _reused_ on each request.\n- **Server-side Rendering** is the pre-rendering method that generates the HTML on **each request**.\n\nImportantly, Next.js lets you **choose** which pre-rendering form\n\n\n## Table of Contents\n\n- [Backend Basics](/blog/backend#backend-basics)\n- [Do You Even Need a Database?](/blog/backend#do-you-even-need-a-database)\n- [Low Code Solutions](/blog/backend#low-code-solutions)\n- [Terms To Understand](/blog/backend#terms-to-understand)\n  - [SQL / NoSQL](/blog/backend#sql--nosql)\n  - [GraphQL / REST](/blog/backend#graphql--rest)\n  - [Authentication / Authorization](/blog/backend#authentication--authorization)\n  - [Hosted / Self-Hosted](/blog/backend#hosted--self-hosted)\n  - [Serverless](/blog/backend#serverless)\n  - [Data Modeling](/blog/backend#data-modeling)\n- [Levels of Abstraction](/blog/backend#levels-of-abstraction)\n- [List of Services](/blog/backend#list-of-services)\n  - [Backend (as a Service)](/blog/backend#backend-as-a-service)\n    - [Supabase](/blog/backend#supabase)\n    - [Hasura](/blog/backend#hasura)\n  - [Build Your Own Backend](/blog/backend#build-your-own-backend)\n    - [Prisma](/blog/backend#prisma)\n- [Should You Use a CMS?](/blog/backend#should-you-use-a-cms)\n- [Starting From Scratch](/blog/backend#starting-from-scratch)\n- [Conclusion / Resources](/blog/backend#conclusion--resources)\n\n## Backend Basics\n\nWhat is this scary place, **the back-end?** You can boil it down to this:\n\n- You need a place to store data ([database](https://dataguide.prisma.io/intro/what-are-databases))\n- You need a method of retrieving the data ([API](https://en.wikipedia.org/wiki/Application_programming_interface))\n\nAs a front-end engineer, you've probably worked with APIs before. They allow you to fetch data from some database, somewhere.\nOn a long enough timeline, you'll eventually need to build your own API or\nwork with an existing codebase that has a back-end. This brings us to our first question.\n\n## Do You Even Need a Database?\n\nYou need a place to store data, right? Here are some questions to consider:\n\n- Can the data live alongside the code?\n- Can the data be tracked with source control?\n- Do non-technical people need to modify the data?\n- Do you need different levels of access?\n\nIf you can store your data with your code in [source control](https://aws.amazon.com/devops/source-control),\nyou might be fine using [Markdown](https://guides.github.com/features/mastering-markdown/)\nwith [git](https://git-scm.com/) – that's what [this blog](https://github.com/leerob/leerob.io) uses.\nIt's also worth mentioning you _could_ use JSON files as a pseudo-database if you fall into this category.\n\nHowever, you're likely reading this article because **you need a database**. Before we start learning about how you can create\nyour own backend, you might also consider a low-code solution.\n\n## Low Code Solutions\n\nSince you're a front-end developer, you might be able to utilize a low code solution.\nThese low code tools are arguably the fastest way to get access to some remote data.\n\nCommon examples include [Google Sheets](https://github.com/franciscop/use-spreadsheet) or [Airtable](https://www.gatsbyjs.org/packages/gatsby-source-airtable/)\nas a database. There are other services that provide an [API abstraction](https://nocodeapi.com/) on a variety of data sources.\n",
          "html": "<p>Next.js has two forms of pre-rendering: <strong>Static Generation</strong> and <strong>Server-side Rendering</strong>. The difference is in <strong>when</strong> it generates the HTML for a page.</p>\n<ul>\n<li><strong>Static Generation</strong> is the pre-rendering method that generates the HTML at <strong>build time</strong>. The pre-rendered HTML is then <em>reused</em> on each request.</li>\n<li><strong>Server-side Rendering</strong> is the pre-rendering method that generates the HTML on <strong>each request</strong>.</li>\n</ul>\n<p>Importantly, Next.js lets you <strong>choose</strong> which pre-rendering form</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"/blog/backend#backend-basics\">Backend Basics</a></li>\n<li><a href=\"/blog/backend#do-you-even-need-a-database\">Do You Even Need a Database?</a></li>\n<li><a href=\"/blog/backend#low-code-solutions\">Low Code Solutions</a></li>\n<li><a href=\"/blog/backend#terms-to-understand\">Terms To Understand</a>\n<ul>\n<li><a href=\"/blog/backend#sql--nosql\">SQL / NoSQL</a></li>\n<li><a href=\"/blog/backend#graphql--rest\">GraphQL / REST</a></li>\n<li><a href=\"/blog/backend#authentication--authorization\">Authentication / Authorization</a></li>\n<li><a href=\"/blog/backend#hosted--self-hosted\">Hosted / Self-Hosted</a></li>\n<li><a href=\"/blog/backend#serverless\">Serverless</a></li>\n<li><a href=\"/blog/backend#data-modeling\">Data Modeling</a></li>\n</ul>\n</li>\n<li><a href=\"/blog/backend#levels-of-abstraction\">Levels of Abstraction</a></li>\n<li><a href=\"/blog/backend#list-of-services\">List of Services</a>\n<ul>\n<li><a href=\"/blog/backend#backend-as-a-service\">Backend (as a Service)</a>\n<ul>\n<li><a href=\"/blog/backend#supabase\">Supabase</a></li>\n<li><a href=\"/blog/backend#hasura\">Hasura</a></li>\n</ul>\n</li>\n<li><a href=\"/blog/backend#build-your-own-backend\">Build Your Own Backend</a>\n<ul>\n<li><a href=\"/blog/backend#prisma\">Prisma</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/blog/backend#should-you-use-a-cms\">Should You Use a CMS?</a></li>\n<li><a href=\"/blog/backend#starting-from-scratch\">Starting From Scratch</a></li>\n<li><a href=\"/blog/backend#conclusion--resources\">Conclusion / Resources</a></li>\n</ul>\n<h2>Backend Basics</h2>\n<p>What is this scary place, <strong>the back-end?</strong> You can boil it down to this:</p>\n<ul>\n<li>You need a place to store data (<a href=\"https://dataguide.prisma.io/intro/what-are-databases\">database</a>)</li>\n<li>You need a method of retrieving the data (<a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\">API</a>)</li>\n</ul>\n<p>As a front-end engineer, you've probably worked with APIs before. They allow you to fetch data from some database, somewhere.\nOn a long enough timeline, you'll eventually need to build your own API or\nwork with an existing codebase that has a back-end. This brings us to our first question.</p>\n<h2>Do You Even Need a Database?</h2>\n<p>You need a place to store data, right? Here are some questions to consider:</p>\n<ul>\n<li>Can the data live alongside the code?</li>\n<li>Can the data be tracked with source control?</li>\n<li>Do non-technical people need to modify the data?</li>\n<li>Do you need different levels of access?</li>\n</ul>\n<p>If you can store your data with your code in <a href=\"https://aws.amazon.com/devops/source-control\">source control</a>,\nyou might be fine using <a href=\"https://guides.github.com/features/mastering-markdown/\">Markdown</a>\nwith <a href=\"https://git-scm.com/\">git</a> – that's what <a href=\"https://github.com/leerob/leerob.io\">this blog</a> uses.\nIt's also worth mentioning you <em>could</em> use JSON files as a pseudo-database if you fall into this category.</p>\n<p>However, you're likely reading this article because <strong>you need a database</strong>. Before we start learning about how you can create\nyour own backend, you might also consider a low-code solution.</p>\n<h2>Low Code Solutions</h2>\n<p>Since you're a front-end developer, you might be able to utilize a low code solution.\nThese low code tools are arguably the fastest way to get access to some remote data.</p>\n<p>Common examples include <a href=\"https://github.com/franciscop/use-spreadsheet\">Google Sheets</a> or <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-airtable/\">Airtable</a>\nas a database. There are other services that provide an <a href=\"https://nocodeapi.com/\">API abstraction</a> on a variety of data sources.</p>"
        },
        "_id": "pre-rendering.mdx",
        "_raw": {
          "sourceFilePath": "pre-rendering.mdx",
          "sourceFileName": "pre-rendering.mdx",
          "sourceFileDir": ".",
          "contentType": "mdx",
          "flattenedPath": "pre-rendering"
        },
        "type": "Post",
        "slug": "pre-rendering"
      },
      "documentHash": "1656146852017",
      "hasWarnings": false,
      "documentTypeName": "Post"
    }
  }
}
