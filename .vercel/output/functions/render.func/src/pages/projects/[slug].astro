---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";

export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"projects">;
};

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <div class="hero">
    <main class="post flex w-full px-[5%] flex-col gap-4 max-w-4xl mx-auto mt-[5vh]">

      <a href="/projects" class="w-8 h-8 border rounded-full block flex items-center justify-center border-neutral-500 transition-colors duration-200 hover:bg-neutral-800 hover:text-white">
        <svg  width="20" height="20"  fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M2.9 12h18"></path>
            <path d="m8.9 18-6-6 6-6"></path>
        </svg>
      </a>
      
      <header role="presentation">
        <img src={post.data.banner} transition:name="projectimage" class="my-5" alt="">

        <p class="mb-3 text-lg">{new Date(post?.data?.publishedAt).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })}</p>
        <h1 class="text-lg lg:text-5xl font-bold text-white">
          {post.data.title} - {formatDate(post.data.publishedAt)}
        </h1>
        <p class="text-base">{post.data.description}</p>
      </header>
      
      <div class="sans content">
        <Content />
      </div>
    </main>
  </div>
</Layout>

<style>
  .hero::before {
    --line: hsl(0 0% 95% / 0.25);
    content: "";
    height: 100vh;
    width: 100vw;
    position: fixed;
    opacity: 0.4;
    background:
        linear-gradient(90deg, var(--line) 1px, transparent 1px 10vmin) 0 -5vmin / 10vmin 10vmin,
        linear-gradient(var(--line) 1px, transparent 1px 10vmin) 0 -5vmin / 10vmin 10vmin;
    mask: linear-gradient(-15deg, transparent 30%, white);
    top: 0;
    z-index: -1;
  }
  .content > * > p {
    font-size: 2rem !important;
  }
</style>